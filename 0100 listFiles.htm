<!doctype html>
<head>
  <title>listFiles - unit ontology review</title>
  <meta charset="utf-8" />
  <style>
    dl {
      margin-left: 2em;
    }
    dt {
      font-weight: bold;
    }
    
  </style>
</head>
<body>
  <h2>0000 runAllScripts.js</h2><dl><dt>key</dt><dd>0000</dd><dt>name</dt><dd>runAllScripts</dd><dt>description</dt><dd>run all analysis scripts in order of their numbering<br><br>optional parameter is the prefix of the first script to execute<br><br>(a script always has to start with 4 digits and end in .js)</dd></dl><h2>0010 runFromScript.js</h2><dl><dt>key</dt><dd>0010</dd><dt>name</dt><dd>runFromScript</dd><dt>description</dt><dd>run all analysis scripts in order of their numbering<br>starting with the given script (or prefix thereof)</dd></dl><h2>0020 runScripts.js</h2><dl><dt>key</dt><dd>0020</dd><dt>name</dt><dd>runScripts</dd><dt>description</dt><dd>run the given analysis scripts in order of their numbering<br>scripts are given by just their number</dd></dl><h2>0100 listFiles.js</h2><dl><dt>key</dt><dd>0100</dd><dt>name</dt><dd>listFiles</dd><dt>description</dt><dd>create a list of all files and their descriptions<br><br>output:<br>- "listFiles" ... information about the scripts</dd><dt>exported datasets</dt><dd>listFiles</dd></dl><h2>0510 extraction.js</h2><dl><dt>key</dt><dd>0510</dd><dt>name</dt><dd>extraction</dd><dt>description</dt><dd>Run all the SPARQL Queries present in /data against the respective ontologies<br>and store the resulting data in /res<br><br>output:<br>- one file per type and ontology in separate folders</dd></dl><h2>0520 check - validate extraction.js</h2><dl><dt>key</dt><dd>0520</dd><dt>name</dt><dd>check - validate extraction</dd><dt>description</dt><dd>check the results of extract data<br>- do all necessary result files exist?<br>- do the contents of the files conform to the standard definition?<br><br>output:<br>- none</dd><dt>exported datasets</dt><dd>check - validate extraction</dd></dl><h2>1000 check - prefixUnit duplicates.js</h2><dl><dt>key</dt><dd>1000</dd><dt>name</dt><dd>check - prefixUnit duplicates</dd><dt>description</dt><dd>check, whether units are listed twice in prefixUnit<br><br>output:<br>- "check - prefixUnit duplicates" ... list of duplicates per ontology</dd><dt>loaded SPARQL datasets</dt><dd>prefixUnit</dd><dt>exported datasets</dt><dd>check - prefixUnit duplicates</dd></dl><h2>1100 check - multiple type assignments.js</h2><dl><dt>key</dt><dd>1100</dd><dt>name</dt><dd>multiple type assignments</dd><dt>description</dt><dd>check, whether there are URIs that are present in multiple types</dd><dt>exported datasets</dt><dd>multiple type assignments</dd></dl><h2>1400 completeness - conversionValues.js</h2><dl><dt>key</dt><dd>1400</dd><dt>name</dt><dd>completeness - conversionValues</dd><dt>description</dt><dd>check, whether all conversions included have either an offset or a factor<br><br>output:<br>- "completeness - conversionValues" ... list of conversions per ontology with neither offset nor factor</dd><dt>loaded SPARQL datasets</dt><dd>conversion</dd><dt>exported datasets</dt><dd>completeness - conversionValues</dd></dl><h2>1500 completeness - dimensionUnit.js</h2><dl><dt>key</dt><dd>1500</dd><dt>name</dt><dd>completeness - dimensionUnit</dd><dt>description</dt><dd>check, whether all referenced units and dimensions of dimensionUnit exist in the respective datasets<br><br>output:<br>"completeness - dimensionUnit" ... list per ontology of missing units and dimensions</dd><dt>loaded SPARQL datasets</dt><dd>unit<br>dimension<br>dimensionUnit</dd><dt>exported datasets</dt><dd>completeness - dimensionUnit</dd></dl><h2>1501 completeness - prefixUnit.js</h2><dl><dt>key</dt><dd>1501</dd><dt>name</dt><dd>completeness - prefixUnit</dd><dt>description</dt><dd>check, whether all referenced units and prefixes of prefixUnit exist in the respective datasets<br><br>output:<br>"completeness - prefixUnit" ... list per ontology of missing units and prefixes</dd><dt>loaded SPARQL datasets</dt><dd>unit<br>prefix<br>prefixUnit</dd><dt>exported datasets</dt><dd>completeness - prefixUnit</dd></dl><h2>1502 completeness - conversionUnits.js</h2><dl><dt>key</dt><dd>1502</dd><dt>name</dt><dd>completeness - conversionUnits</dd><dt>description</dt><dd>check, whether all referenced units of conversion exist in the unit dataset<br><br>output:<br>"completeness - conversionUnits" ... list per ontology of missing units</dd><dt>loaded SPARQL datasets</dt><dd>unit<br>conversion</dd><dt>exported datasets</dt><dd>completeness - conversionUnits</dd></dl><h2>1503 completeness - appFieldUnit.js</h2><dl><dt>key</dt><dd>1503</dd><dt>name</dt><dd>completeness - appFieldUnit</dd><dt>description</dt><dd>check, whether all referenced units and application fields of appFieldUnit exist in the respective datasets<br><br>output:<br>"completeness - appFieldUnit" ... list per ontology of missing units and application fields</dd><dt>loaded SPARQL datasets</dt><dd>unit<br>appField<br>appFieldUnit</dd><dt>exported datasets</dt><dd>completeness - appFieldUnit</dd></dl><h2>1504 completeness - quantKindDim.js</h2><dl><dt>key</dt><dd>1504</dd><dt>name</dt><dd>completeness - quantKindDim</dd><dt>description</dt><dd>check, whether all referenced quantity kinds and dimensions of quantKindDim exist in the respective datasets<br><br>output:<br>"completeness - quantKindDim" ... list per ontology of missing dimensions and quantity kinds</dd><dt>loaded SPARQL datasets</dt><dd>quantKind<br>dimension<br>quantKindDim</dd><dt>exported datasets</dt><dd>completeness - quantKindDim</dd></dl><h2>1505 completeness - quantKindUnit.js</h2><dl><dt>key</dt><dd>1505</dd><dt>name</dt><dd>completeness - quantKindUnit</dd><dt>description</dt><dd>check, whether all referenced units and quantity kinds of quantKindUnit exist in the respective datasets<br><br>output:<br>"completeness - quantKindUnit" ... list per ontology of missing units and quantity kinds</dd><dt>loaded SPARQL datasets</dt><dd>quantKind<br>unit<br>quantKindUnit</dd><dt>exported datasets</dt><dd>completeness - quantKindUnit</dd></dl><h2>1506 completeness - systemUnit.js</h2><dl><dt>key</dt><dd>1506</dd><dt>name</dt><dd>completeness - systemUnit</dd><dt>description</dt><dd>check, whether all referenced units of systemUnit exist in the unit dataset</dd><dt>loaded SPARQL datasets</dt><dd>unit<br>system<br>systemUnit</dd><dt>exported datasets</dt><dd>completeness - systemUnit</dd></dl><h2>1600 check - multiple labels.js</h2><dl><dt>key</dt><dd>1600</dd><dt>name</dt><dd>check - multiple labels</dd><dt>description</dt><dd>list all objects, which have multiple labels<br><br>output<br>- "check - multiple labels" ... list per ontology of object with multiple labels</dd><dt>exported datasets</dt><dd>check - multiple labels</dd></dl><h2>1650 check - exotic characters.js</h2><dl><dt>key</dt><dd>1650</dd><dt>name</dt><dd>check - exotic characters</dd><dt>description</dt><dd>find exotic characters<br>currently tested:<br>- non standard whitespace characters<br><br>output:<br>- "check - exotic characters" ... list per ontology, type and exotic character of found occurrences</dd><dt>exported datasets</dt><dd>check - exotic characters</dd></dl><h2>1670 check - keyword usage.js</h2><dl><dt>key</dt><dd>1670</dd><dt>name</dt><dd>check - keyword usage</dd><dt>description</dt><dd>collect data about the usage of keywords like "per" and "reciprocal"<br><br>output:<br>"check - keyword usage" ... list per ontology and keyword of units, whose label contains any of the given keywords</dd><dt>loaded SPARQL datasets</dt><dd>unit</dd><dt>exported datasets</dt><dd>check - keyword usage</dd></dl><h2>1700 statistic - label languages overall.js</h2><dl><dt>key</dt><dd>1700</dd><dt>name</dt><dd>statistic - label languages overall</dd><dt>description</dt><dd>count languages used for labels per ontology<br>used to select display label later on<br><br>output:<br>- "statistic - label languages overall"</dd><dt>exported datasets</dt><dd>statistic - label languages overall</dd></dl><h2>2000 semObject - dimensions.js</h2><dl><dt>key</dt><dd>2000</dd><dt>name</dt><dd>dimension</dd><dt>description</dt><dd>convert the extracted list of dimension to SemDimension objects<br><br>output:<br>- "dimension" ... list of all converted dimensions<br>- "dimension_perOnto" ... list of converted dimensions per ontology</dd><dt>loaded SPARQL datasets</dt><dd>dimension</dd><dt>exported datasets</dt><dd>dimension<br>dimension_perOnto</dd></dl><h2>2100 semObject - units.js</h2><dl><dt>key</dt><dd>2100</dd><dt>name</dt><dd>unit</dd><dt>description</dt><dd>convert the extracted list of units to SemUnit objects<br><br>output:<br>- "unit" ... list of all converted units<br>- "unit_perOnto" ... list of converted units per ontology</dd><dt>loaded SPARQL datasets</dt><dd>unit<br>prefixUnit</dd><dt>loaded predefined datasets</dt><dd>2100 systemModifier.csv</dd><dt>exported datasets</dt><dd>unit<br>unit_perOnto</dd></dl><h2>2200 calculation - conversion transitive closure.js</h2><dl><dt>key</dt><dd>2200</dd><dt>name</dt><dd>conversion</dd><dt>description</dt><dd>computes the transitive closure for conversions<br>done for each ontology separately<br><br>output:<br>- "conversion" ... list of all conversions (extracted and computed)<br>- "conversion_perOnto" ... list per ontology of conversions (extracted and computed)</dd><dt>loaded SPARQL datasets</dt><dd>conversion</dd><dt>exported datasets</dt><dd>conversion_perOnto<br>conversion</dd></dl><h2>2300 semObject - appFields.js</h2><dl><dt>key</dt><dd>2300</dd><dt>name</dt><dd>appField</dd><dt>description</dt><dd>convert the extracted list of application fields to SemObjects objects<br><br>output:<br>- "appField" ... list of all converted application fields<br>- "appField_perOnto" ... list of converted application fields per ontology</dd><dt>loaded SPARQL datasets</dt><dd>appField</dd><dt>exported datasets</dt><dd>appField<br>appField_perOnto</dd></dl><h2>2400 semObject - quantKinds.js</h2><dl><dt>key</dt><dd>2400</dd><dt>name</dt><dd>quantKind</dd><dt>description</dt><dd>convert the extracted list of quantity kinds to SemObject objects<br><br>output:<br>- "quantKind" ... list of all converted quantity kinds<br>- "quantKind_perOnto" ... list of converted quantity kinds per ontology</dd><dt>loaded SPARQL datasets</dt><dd>quantKind</dd><dt>exported datasets</dt><dd>quantKind<br>quantKind_perOnto</dd></dl><h2>2500 semObject - systems.js</h2><dl><dt>key</dt><dd>2500</dd><dt>name</dt><dd>system</dd><dt>description</dt><dd>convert the extracted list of system of units to SemObjects objects<br><br>output:<br>- "system" ... list of all converted systems of units<br>- "system_perOnto" ... list of converted systems of units per ontology</dd><dt>loaded SPARQL datasets</dt><dd>system</dd><dt>exported datasets</dt><dd>system<br>system_perOnto</dd></dl><h2>2600 semObject - prefixes.js</h2><dl><dt>key</dt><dd>2600</dd><dt>name</dt><dd>prefix</dd><dt>description</dt><dd>convert the extracted list of prefixes to SemObjects objects<br><br>output:<br>- "prefix" ... list of all converted prefixes<br>- "prefix_perOnto" ... list of converted prefixes per ontology</dd><dt>loaded SPARQL datasets</dt><dd>prefix</dd><dt>exported datasets</dt><dd>prefix<br>prefix_perOnto</dd></dl><h2>3000 check - duplicated dimVector.js</h2><dl><dt>key</dt><dd>3000</dd><dt>name</dt><dd>check - duplicated dimVector</dd><dt>description</dt><dd>check, whether there are duplicate dimension vectors within one ontology<br><br>output:<br>"check - duplicated dimVector" ... list of dimensions with identical dimension vectors</dd><dt>exported datasets</dt><dd>check - duplicated dimVector</dd></dl><h2>3100 heuristic - prefixed units.js</h2><dl><dt>key</dt><dd>3100</dd><dt>name</dt><dd>heuristic - prefixed units</dd><dt>description</dt><dd>find units, that are determined as prefixed by a heuristic, but not by ontology<br><br>output:<br>- "heuristic - prefixed units" ... list per ontology of units not recognized as prefixed<br>- "unit_prefixHeuristic" ... list of SemUnit with heuristic information included</dd><dt>loaded (intermediate) result datasets</dt><dd>unit<br>prefix</dd><dt>exported datasets</dt><dd>heuristic - prefixed units<br>'unit_prefixHeuristic'</dd></dl><h2>3200 check - redundant conversions.js</h2><dl><dt>key</dt><dd>3200</dd><dt>name</dt><dd>check - redundant conversions</dd><dt>description</dt><dd>check, whether there are duplicate/redundant conversions given within a single ontology<br><br>output:<br>- "check - redundant conversions" ... list per ontology of redundant conversions</dd><dt>loaded SPARQL datasets</dt><dd>conversion</dd><dt>exported datasets</dt><dd>check - redundant conversions</dd></dl><h2>3300 check - conversion prefix factor comparison.js</h2><dl><dt>key</dt><dd>3300</dd><dt>name</dt><dd>check - conversion prefix factor comparison</dd><dt>description</dt><dd>check, if there are contradictions in an ontology between conversion and prefix values<br><br>output:<br>- "check - conversion prefix factor comparison" ... list per ontology of contradictions</dd><dt>loaded SPARQL datasets</dt><dd>conversion<br>prefix<br>prefixUnit</dd><dt>exported datasets</dt><dd>check - conversion prefix factor comparison</dd></dl><h2>3700 statistic - relation coverage.js</h2><dl><dt>key</dt><dd>3700</dd><dt>name</dt><dd>statistic - relation coverage</dd><dt>description</dt><dd>calculate the coverage of an ontology wrt to the different connection relations<br>== number of distinct URIs of a given type in a relation<br><br>example: "how many units are attached to a system of units?"<br>         or<br>         "how many quantity kinds have at least one unit?"<br><br>output:<br>- "statistic - relation coverage" ... counts how many instances of the baseType have at least one entry in the relation<br>- "statistic - relation coverage missing"   ... URIs of the baseType with no entry in the relation</dd><dt>exported datasets</dt><dd>statistic - relation coverage<br>statistic - relation coverage + ' missing'</dd></dl><h2>3750 statistic - label languages.js</h2><dl><dt>key</dt><dd>3750</dd><dt>name</dt><dd>statistic - label languages</dd><dt>description</dt><dd>count languages used for labels per type<br><br>output:<br>- "statistic - label languages"</dd><dt>exported datasets</dt><dd>statistic - label languages</dd></dl><h2>3751 check - missing languages in labels.js</h2><dl><dt>key</dt><dd>3751</dd><dt>name</dt><dd>check - missing languages in labels</dd><dt>description</dt><dd>find individuals, that are lacking a label in a specific language, <br>even though that language is specified for that type and ontology<br><br>output:<br>- 'check - missing languages in labels'</dd><dt>loaded (intermediate) result datasets</dt><dd>statistic - label languages</dd><dt>exported datasets</dt><dd>check - missing languages in labels</dd></dl><h2>4000 mapping - dimensions.js</h2><dl><dt>key</dt><dd>4000</dd><dt>name</dt><dd>mapDimension</dd><dt>description</dt><dd>map the dimensions of the ontologies to SynSets<br><br>output<br>- "mapDimension" ... list of SynSets</dd><dt>loaded (intermediate) result datasets</dt><dd>dimension</dd><dt>exported datasets</dt><dd>mapDimension</dd></dl><h2>4100 mapping - units.js</h2><dl><dt>key</dt><dd>4100</dd><dt>name</dt><dd>mapUnit</dd><dt>description</dt><dd>map the units of the ontologies to SynSets<br><br>output<br>- "mapUnit" ... list of SynSets</dd><dt>loaded (intermediate) result datasets</dt><dd>unit_prefixHeuristic</dd><dt>exported datasets</dt><dd>mapUnit</dd></dl><h2>4200 mapping - conversions.js</h2><dl><dt>key</dt><dd>4200</dd><dt>name</dt><dd>mapConversion</dd><dt>description</dt><dd>map the conversions according to the unit SynSets<br>omitted mappings:<br>- less than two conversions included<br>- consisting of just computed conversions<br><br>output:<br>- "mapConversion" ... list of mapped conversions</dd><dt>loaded (intermediate) result datasets</dt><dd>mapUnit<br>conversion</dd><dt>exported datasets</dt><dd>mapConversion</dd></dl><h2>4300 mapping - appField.js</h2><dl><dt>key</dt><dd>4300</dd><dt>name</dt><dd>mapAppField</dd><dt>description</dt><dd>map the application fields of the ontologies to SynSets<br><br>output<br>- "mapAppField" ... list of SynSets</dd><dt>loaded (intermediate) result datasets</dt><dd>appField</dd><dt>exported datasets</dt><dd>mapAppField</dd></dl><h2>4400 mapping - quantKinds.js</h2><dl><dt>key</dt><dd>4400</dd><dt>name</dt><dd>mapQuantKind</dd><dt>description</dt><dd>map the quantity kinds of the ontologies to SynSets<br><br>output<br>- "mapQuantKind" ... list of SynSets</dd><dt>loaded (intermediate) result datasets</dt><dd>quantKind</dd><dt>exported datasets</dt><dd>mapQuantKind</dd></dl><h2>4500 mapping - system.js</h2><dl><dt>key</dt><dd>4500</dd><dt>name</dt><dd>mapSystem</dd><dt>description</dt><dd>map the systems of units of the ontologies to SynSets<br><br>output<br>- "mapSystem" ... list of SynSets</dd><dt>loaded (intermediate) result datasets</dt><dd>system</dd><dt>exported datasets</dt><dd>mapSystem</dd></dl><h2>4600 mapping - prefix.js</h2><dl><dt>key</dt><dd>4600</dd><dt>name</dt><dd>mapPrefix</dd><dt>description</dt><dd>map the prefixes of the ontologies to SynSets<br><br>output<br>- "mapPrefix" ... list of SynSets</dd><dt>loaded (intermediate) result datasets</dt><dd>prefix</dd><dt>exported datasets</dt><dd>mapPrefix</dd></dl><h2>5000 check - dimensionVector.js</h2><dl><dt>key</dt><dd>5000</dd><dt>name</dt><dd>check - dimensionVector</dd><dt>description</dt><dd>check the mapping of dimensions for errors:<br>- different dimension vectors within one synonym set<br><br>output:<br>- "check - dimensionVector" ... list of contradicting dimension vectors</dd><dt>loaded (intermediate) result datasets</dt><dd>mapDimension</dd><dt>exported datasets</dt><dd>check - dimensionVector</dd></dl><h2>5100 check - missed mappings dimension.js</h2><dl><dt>key</dt><dd>5100</dd><dt>name</dt><dd>check - missed mappings dimension</dd><dt>description</dt><dd>try to find missed dimension mappings by comparing the dimension vectors of the SynSets<br><br>output:<br>- "check - missed mappings dimension" ... SynSets of dimensions, which share the same dimension vector</dd><dt>loaded (intermediate) result datasets</dt><dd>mapDimension</dd><dt>exported datasets</dt><dd>check - missed mappings dimension</dd></dl><h2>5130 check - missed units.js</h2><dl><dt>key</dt><dd>5130</dd><dt>name</dt><dd>check - missed units</dd><dt>description</dt><dd>find "important" missing units in the ontologies<br><br>"important" is defined as "the unit is present in more than half the listed ontologies"<br><br>output:<br>- "check - missed units" ... list per ontology of missing units</dd><dt>loaded (intermediate) result datasets</dt><dd>mapUnit</dd><dt>exported datasets</dt><dd>check - missed units</dd></dl><h2>5150 check - mapped duplicates.js</h2><dl><dt>key</dt><dd>5150</dd><dt>name</dt><dd>check - mapped duplicates</dd><dt>description</dt><dd>check the mapped lists for entries,<br>that include more than one object of the same ontology<br><br>output:<br>- "check - mapped duplicates" ... list per ontology of objects mapped to one another</dd><dt>loaded SPARQL datasets</dt><dd>sameAs</dd><dt>exported datasets</dt><dd>check - mapped duplicates_ + mapType</dd></dl><h2>5200 check - conversion contradictions.js</h2><dl><dt>key</dt><dd>5200</dd><dt>name</dt><dd>check - conversion contradictions</dd><dt>description</dt><dd>check the mapped conversions for consistency across ontologies<br>eliminates conversions, which seem to be rounded values of one another<br><br>output:<br>- "check - conversion contradictions" ... list of contradicting conversions<br>- "check - conversion contradictions rounded" ... list of contradicting conversions taking rounding into account</dd><dt>loaded (intermediate) result datasets</dt><dd>mapUnit<br>mapConversion</dd><dt>exported datasets</dt><dd>check - conversion contradictions<br>check - conversion contradictions + ' rounded'</dd></dl><h2>5500 check - dimension per unit after mapping.js</h2><dl><dt>key</dt><dd>5500</dd><dt>name</dt><dd>check - dimension per unit after mapping</dd><dt>description</dt><dd>cross validate unit mapping and dimension mapping using the dimensionUnit association<br><br>output:<br>- "check - dimension per unit after mapping" ... list of dimension-unit-pairs, that are ambiguous wrt. to dimensionUnit<br>- "check - dimension per unit after mapping error" ... ambiguous relations in dimensionUnit, if any</dd><dt>loaded SPARQL datasets</dt><dd>dimensionUnit</dd><dt>loaded (intermediate) result datasets</dt><dd>mapDimension<br>mapUnit</dd><dt>exported datasets</dt><dd>check - dimension per unit after mapping + ' error'<br>check - dimension per unit after mapping</dd></dl><h2>5550 check - vague designation.js</h2><dl><dt>key</dt><dd>5550</dd><dt>name</dt><dd>check - vague designation</dd><dt>description</dt><dd>check for unit that are imprecise, e.g. "gallon" vs "gallon (us)" and "gallon (uk)"<br><br>output:<br>- "check - vague designation" ... list of units with vague designation</dd><dt>loaded predefined datasets</dt><dd>2100 systemModifier.csv</dd><dt>loaded (intermediate) result datasets</dt><dd>mapUnit</dd><dt>exported datasets</dt><dd>check - vague designation</dd></dl><h2>5600 check - prefix factors.js</h2><dl><dt>key</dt><dd>5600</dd><dt>name</dt><dd>check - prefix factors</dd><dt>description</dt><dd>Compare the factors associated with the prefixes for mismatches<br><br>output:<br>- "check - prefix factors" ... contradicting prefixes</dd><dt>loaded (intermediate) result datasets</dt><dd>mapPrefix</dd><dt>exported datasets</dt><dd>check - prefix factors</dd></dl><h2>6000 statistic - individuals per ontology after extraction.js</h2><dl><dt>key</dt><dd>6000</dd><dt>name</dt><dd>statistic - individuals per ontology after extraction</dd><dt>description</dt><dd>count the entries per ontology result file<br><br>output:<br>- "statistic - individuals per ontology after extraction" ... counts of objects per ontology and type</dd><dt>exported datasets</dt><dd>statistic - individuals per ontology after extraction</dd></dl><h2>6010 statistic - prefixed units after extraction.js</h2><dl><dt>key</dt><dd>6010</dd><dt>name</dt><dd>statistic - prefixed units after extraction</dd><dt>description</dt><dd>count prefixed units per ontology<br>synonyms in one ontology will be counted repeatedly<br><br>calculated values:<br>- unit_noprefix_total      : count of units without prefix (not stated by the ontology, other ontologies or heuristic)<br>- unit_prefix_ontology     : count of units with prefix (stated by the ontology)<br>- unit_prefix_heuristic    : count of units with prefix (not stated by the ontology, but stated by heuristic)<br>- unit_prefix_unrecognized : count of units with prefix (not stated by the ontology or heuristic, but stated by other ontology)<br>- unit_prefix_total        : count of units with prefix (stated by the ontology, other ontologies or heuristic)<br><br>output:<br>- "statistic - prefixed units after extraction" ... calculated values per ontology</dd><dt>loaded (intermediate) result datasets</dt><dd>mapUnit</dd><dt>exported datasets</dt><dd>statistic - prefixed units after extraction</dd></dl><h2>6020 statistic - individuals per ontology after mapping.js</h2><dl><dt>key</dt><dd>6020</dd><dt>name</dt><dd>statistic - individuals per ontology after mapping</dd><dt>description</dt><dd>count the entries per SynSet type<br><br>output:<br>- "statistic - individuals per ontology after mapping" ... counts of objects per ontology wrt to SynSets</dd><dt>exported datasets</dt><dd>statistic - individuals per ontology after mapping</dd></dl><h2>6021 statistic - prefixed units after mapping.js</h2><dl><dt>key</dt><dd>6021</dd><dt>name</dt><dd>statistic - prefixed units after mapping</dd><dt>description</dt><dd>count the entries per SynSet type for special cases:<br>* non-prefixed units (not stated by the ontology, other ontologies or heuristic)<br><br>synonyms in one ontology will be counted collectively<br><br>output:<br>- "statistic - prefixed units after mapping" ... counts per ontology</dd><dt>loaded (intermediate) result datasets</dt><dd>mapUnit</dd><dt>exported datasets</dt><dd>statistic - prefixed units after mapping</dd></dl><h2>6050 statistic - individual reduction by mapping.js</h2><dl><dt>key</dt><dd>6050</dd><dt>name</dt><dd>statistic - individual reduction by mapping</dd><dt>description</dt><dd>count per type: plain values as extracted and mapped SynSets<br><br>output:<br>- "statistic - individual reduction by mapping" ... counts per type</dd><dt>exported datasets</dt><dd>statistic - individual reduction by mapping</dd></dl><h2>6100 statistic - unit overlap.js</h2><dl><dt>key</dt><dd>6100</dd><dt>name</dt><dd>statistic - unit overlap</dd><dt>description</dt><dd>Count the overlap between ontologies in the mapped units<br><br>output:<br>- "statistic - unit overlap - shared noPrefix" ... shared units without prefix among x ontologies<br>- "statistic - unit overlap - shared total" ... shared units among x ontologies<br>- "statistic - unit overlap - sharedCounts noPrefix" ... number of shared units without prefix among x ontologies<br>- "statistic - unit overlap - sharedCounts total" ... number of shared units among x ontologies<br>- "statistic - unit overlap - overlap noPrefix" ... number of shared units without prefix between any two ontologies<br>- "statistic - unit overlap - overlap total" ... number of shared units between any two ontologies</dd><dt>loaded (intermediate) result datasets</dt><dd>mapUnit</dd><dt>exported datasets</dt><dd>statistic - unit overlap + ' - shared noPrefix'<br>statistic - unit overlap + ' - shared total'<br>statistic - unit overlap + ' - sharedCounts noPrefix'<br>statistic - unit overlap + ' - sharedCounts total'<br>statistic - unit overlap + ' - overlap noPrefix'<br>statistic - unit overlap + ' - overlap total'</dd></dl><h2>6900 statistic - sameAs scope.js</h2><dl><dt>key</dt><dd>6900</dd><dt>name</dt><dd>statistic - sameAs scope</dd><dt>description</dt><dd>Count the number of sameAs entries per known namespace<br><br>output:<br>- "statistic - sameAs scope" ... counts per namespace</dd><dt>loaded SPARQL datasets</dt><dd>sameAs</dd><dt>loaded predefined datasets</dt><dd>6900 namespaces.csv</dd><dt>exported datasets</dt><dd>statistic - sameAs scope</dd></dl><h2>9000 statistic - individuals per ontology after extraction.js</h2><dl><dt>key</dt><dd>9000</dd><dt>name</dt><dd>statistic - individuals per ontology after extraction</dd><dt>description</dt><dd>Create HTML output for contents of the ontologies (per type) before mapping to SynSets<br><br>output:<br>- "statistic - individuals per ontology after extraction" ... table of extracted individuals per ontology</dd><dt>loaded (intermediate) result datasets</dt><dd>statistic - individuals per ontology after extraction<br>statistic - prefixed units after extraction</dd><dt>exported HTML file</dt><dd>statistic - individuals per ontology after extraction</dd></dl><h2>9010 statistic - individuals per ontology after mapping.js</h2><dl><dt>key</dt><dd>9010</dd><dt>name</dt><dd>statistic - individuals per ontology after mapping</dd><dt>description</dt><dd>Create HTML output for contents of the ontologies (per type) after mapping to SynSets<br><br>output:<br>- "statistic - individuals per ontology after mapping" ... table of individuals per ontology after mapping</dd><dt>loaded (intermediate) result datasets</dt><dd>statistic - individuals per ontology after mapping<br>statistic - prefixed units after mapping</dd><dt>exported HTML file</dt><dd>statistic - individuals per ontology after mapping</dd></dl><h2>9050 check - extracted properties.js</h2><dl><dt>key</dt><dd>9050</dd><dt>name</dt><dd>check - extracted properties</dd><dt>description</dt><dd>Create HTML output for the results of property distribution in SPARQL files<br><br>output:<br>- "check - extracted properties" ... table for property distribution per ontology and type</dd><dt>loaded (intermediate) result datasets</dt><dd>check - validate extraction</dd><dt>exported HTML file</dt><dd>check - extracted properties</dd></dl><h2>9060 check - relation coverage.js</h2><dl><dt>key</dt><dd>9060</dd><dt>name</dt><dd>check - individuals used in relations</dd><dt>description</dt><dd>Create HTML output for coverage of baseTypes in the relations<br>uses instance counts (not SynSet counts!) as reference<br>output:<br>- "check - individuals used in relations" ... dsitribution of objects per relation<br>- "check - individuals used in relations missing" ... list per ontology of objects missing in a relation</dd><dt>loaded (intermediate) result datasets</dt><dd>statistic - relation coverage<br>statistic - individuals per ontology after extraction<br>statistic - relation coverage missing</dd><dt>exported HTML file</dt><dd>check - individuals used in relations<br>check - individuals used in relations + ' missing'</dd></dl><h2>9100 check - mapping.js</h2><dl><dt>key</dt><dd>9100</dd><dt>name</dt><dd>check - mappings</dd><dt>description</dt><dd>Create HTML outputs for mapped SynSets<br><br>output:<br>- (various files) ... list of SynSets per type</dd><dt>exported HTML file</dt><dd>check - mappings + ' - ' + type</dd></dl><h2>9101 check - mapping sorted words in labels.js</h2><dl><dt>key</dt><dd>9101</dd><dt>name</dt><dd>check - mapping sorted words in labels</dd><dt>description</dt><dd>Create HTML outputs for mapped SynSets<br>transform labels; makes for easier spotting of missed mappings<br>can not be automated, because of "gram per litre" and "litre per gram"<br>output:<br>- (various files) ... list of SynSets per type labels sorted alphabetically</dd><dt>exported HTML file</dt><dd>check - mapping sorted words in labels + ' - ' + type</dd></dl><h2>9110 check - missed prefix relation.js</h2><dl><dt>key</dt><dd>9110</dd><dt>name</dt><dd>check - missed prefix relation</dd><dt>description</dt><dd>Create HTML output for unit, which possibly lack a prefix annotation<br>lack is determined by heuristic<br>output:<br>- "check - missed prefix relation" ... list per ontology of units with possibly lacking prefix annotation</dd><dt>loaded (intermediate) result datasets</dt><dd>unit<br>heuristic - prefixed units</dd><dt>exported HTML file</dt><dd>check - missed prefix relation</dd></dl><h2>9130 check - missed units.js</h2><dl><dt>key</dt><dd>9130</dd><dt>name</dt><dd>check - missed units</dd><dt>description</dt><dd>Create HTML output for important units missing in an ontology<br><br>output:<br>- "check - missed units" ... list per ontology of possibly missing units</dd><dt>loaded (intermediate) result datasets</dt><dd>check - missed units</dd><dt>exported HTML file</dt><dd>check - missed units</dd></dl><h2>9150 check - mapped duplicates.js</h2><dl><dt>key</dt><dd>9150</dd><dt>name</dt><dd>check - mapped duplicates</dd><dt>description</dt><dd>Create HTML output for duplicate mappings,<br>that is SynSets containing more than one individual from a single ontology<br>output:<br>- "check - mapped duplicates" ... list of possible duplicates</dd><dt>exported HTML file</dt><dd>check - mapped duplicates</dd></dl><h2>9200 check - redundant conversions.js</h2><dl><dt>key</dt><dd>9200</dd><dt>name</dt><dd>check - redundant conversions</dd><dt>description</dt><dd>Create HTML output for used redundant conversions in a single ontology<br><br>output:<br>- "check - redundant conversions" ... list per ontology of redundant conversions</dd><dt>loaded (intermediate) result datasets</dt><dd>check - redundant conversions<br>unit</dd><dt>exported HTML file</dt><dd>check - redundant conversions</dd></dl><h2>9270 statistic - unit overlap.js</h2><dl><dt>key</dt><dd>9270</dd><dt>name</dt><dd>statistic - unit overlap</dd><dt>description</dt><dd>Create HTML output for overlap in mapped units<br>output:<br>- 'statistic - unit overlap noPrefix' ... table for unit overlap for unprefixed units<br>- 'statistic - unit overlap total' ... table for unit overlap for all units</dd><dt>loaded (intermediate) result datasets</dt><dd>statistic - individuals per ontology after mapping<br>statistic - unit overlap - overlap total<br>statistic - prefixed units after mapping<br>statistic - unit overlap - overlap noPrefix</dd><dt>exported HTML file</dt><dd>statistic - unit overlap + ' total'<br>statistic - unit overlap + ' noPrefix'</dd></dl><h2>9280 check - unit per dimension after mapping.js</h2><dl><dt>key</dt><dd>9280</dd><dt>name</dt><dd>check - unit per dimension after mapping</dd><dt>description</dt><dd>Create HTML output for unit per dimension<br>output:<br>- "check - unit per dimension after mapping" ... list per dimension Synset of linked units</dd><dt>loaded SPARQL datasets</dt><dd>dimensionUnit</dd><dt>loaded (intermediate) result datasets</dt><dd>mapDimension<br>mapUnit<br>mapDimension</dd><dt>exported HTML file</dt><dd>check - unit per dimension after mapping</dd></dl><h2>9350 check - conversion contradictions.js</h2><dl><dt>key</dt><dd>9350</dd><dt>name</dt><dd>check - conversion contradictions</dd><dt>description</dt><dd>Create HTML output for mismatches in conversions<br>output:<br>- "check - conversion contradictions" ... list of conversions with different factors/offsets by different ontologies<br>- "check - conversion contradictions rounded" ... list of conversions with different factors/offsets by different ontologies after taking rounding into account</dd><dt>loaded (intermediate) result datasets</dt><dd>mapUnit<br>check - conversion contradictions<br>check - conversion contradictions rounded</dd><dt>exported HTML file</dt><dd>filename</dd></dl><h2>9400 check - dimensionVector.js</h2><dl><dt>key</dt><dd>9400</dd><dt>name</dt><dd>check - dimensionVector</dd><dt>description</dt><dd>Create HTML output for mismatches in dimension vectors<br>output:<br>- "check - dimensionVector" ... list of dimensions with mismatches in their dimension vector</dd><dt>loaded (intermediate) result datasets</dt><dd>check - dimensionVector<br>dimension</dd><dt>exported HTML file</dt><dd>check - dimensionVector</dd></dl><h2>9500 check - dimension per unit after mapping.js</h2><dl><dt>key</dt><dd>9500</dd><dt>name</dt><dd>check - dimension per unit after mapping</dd><dt>description</dt><dd>Create HTML output for cross validate unit mapping and dimension mapping<br>using the dimensionUnit association<br>output:<br>- "check - dimension per unit after mapping" ... list of instances, where a unit SynSet is associated with more than one dimension SynSet</dd><dt>loaded (intermediate) result datasets</dt><dd>check - dimension per unit after mapping</dd><dt>exported HTML file</dt><dd>check - dimension per unit after mapping</dd></dl><h2>9550 check - vague designation.js</h2><dl><dt>key</dt><dd>9550</dd><dt>name</dt><dd>check - vague designation</dd><dt>description</dt><dd>Create HTML output for possibly imprecise units<br>example: gallon vs gallon US vs gallon UK<br>output:<br>- "check - vague designation" ... list of units with possibly imprecise individuals</dd><dt>loaded (intermediate) result datasets</dt><dd>check - vague designation</dd><dt>exported HTML file</dt><dd>check - vague designation</dd></dl><h2>9600 check - prefix factors.js</h2><dl><dt>key</dt><dd>9600</dd><dt>name</dt><dd>check - prefix factors</dd><dt>description</dt><dd>Create HTML output for mismatches in prefix factors<br>output:<br>- "check - prefix factors" ... list of prefix SynSets with mismatches in factor</dd><dt>loaded (intermediate) result datasets</dt><dd>check - prefix factors</dd><dt>exported HTML file</dt><dd>check - prefix factors</dd></dl><h2>9650 check - exotic characters.js</h2><dl><dt>key</dt><dd>9650</dd><dt>name</dt><dd>check - exotic characters</dd><dt>description</dt><dd>Create HTML output for used exotic characters<br>example: using "no-break space" (#160) instead of plain spaces<br>output:<br>- "check - exotic characters" ... list per character of labels using exotic characters</dd><dt>loaded (intermediate) result datasets</dt><dd>check - exotic characters</dd><dt>exported HTML file</dt><dd>check - exotic characters</dd></dl><h2>9670 check - keyword usage.js</h2><dl><dt>key</dt><dd>9670</dd><dt>name</dt><dd>check - keyword usage</dd><dt>description</dt><dd>Create HTML output for used keywords like "per" or "reciprocal"<br>output:<br>- "check - keyword usage" ... list per ontology of used keywords including the respective amount<br>- "check - keyword usage details" ... list per ontology of used keywords including the respective units</dd><dt>loaded (intermediate) result datasets</dt><dd>check - keyword usage</dd><dt>exported HTML file</dt><dd>check - keyword usage<br>check - keyword usage + ' details'</dd></dl><h2>9700 check - multiple labels.js</h2><dl><dt>key</dt><dd>9700</dd><dt>name</dt><dd>check - multiple labels</dd><dt>description</dt><dd>Create HTML output for units with multiple labels<br>output:<br>- "check - multiple labels" ... list per ontology and type of objects with more than one label</dd><dt>loaded (intermediate) result datasets</dt><dd>check - multiple labels</dd><dt>exported HTML file</dt><dd>check - multiple labels</dd></dl><h2>9750 statistic - label languages.js</h2><dl><dt>key</dt><dd>9750</dd><dt>name</dt><dd>statistic - label languages</dd><dt>description</dt><dd>Create HTML output for the languages used in labels per ontology and type<br><br>output:<br>- "statistic - label languages" ... table of languages used per ontology and type</dd><dt>loaded (intermediate) result datasets</dt><dd>statistic - label languages</dd><dt>exported HTML file</dt><dd>statistic - label languages</dd></dl><h2>9751 check - missing languages in labels.js</h2><dl><dt>key</dt><dd>9751</dd><dt>name</dt><dd>check - missing languages in labels</dd><dt>description</dt><dd>Create HTML output for languages missing in labels per ontology and type<br><br>output:<br>- "check - missing languages in labels" ... list of languages missing in labels per ontology and type</dd><dt>loaded (intermediate) result datasets</dt><dd>check - missing languages in labels</dd><dt>exported HTML file</dt><dd>check - missing languages in labels</dd></dl>
</body>